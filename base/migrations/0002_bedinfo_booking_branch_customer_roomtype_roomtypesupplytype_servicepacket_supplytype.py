# Generated by Django 3.2.7 on 2023-05-09 06:53

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('base', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('bookingid', models.CharField(db_column='BookingID', max_length=20, primary_key=True, serialize=False)),
                ('bookingdate', models.DateTimeField(db_column='BookingDate')),
                ('guestnum', models.PositiveIntegerField(db_column='GuestNum')),
                ('checkin', models.DateTimeField(db_column='CheckIn')),
                ('checkout', models.DateTimeField(db_column='CheckOut')),
                ('status', models.PositiveIntegerField(db_column='Status')),
                ('totalpay', models.PositiveIntegerField(db_column='TotalPay')),
            ],
            options={
                'db_table': 'booking',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('branchid', models.CharField(db_column='BranchID', max_length=6, primary_key=True, serialize=False)),
                ('province', models.CharField(db_column='Province', max_length=50)),
                ('address', models.CharField(db_column='Address', max_length=100, unique=True)),
                ('phonenum', models.CharField(db_column='PhoneNum', max_length=12, unique=True)),
                ('email', models.CharField(db_column='Email', max_length=64, unique=True)),
            ],
            options={
                'db_table': 'branch',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customerid', models.CharField(db_column='CustomerID', max_length=10, primary_key=True, serialize=False)),
                ('citizenid', models.CharField(db_column='CitizenID', max_length=12, unique=True)),
                ('fullname', models.CharField(db_column='FullName', max_length=45)),
                ('phone', models.CharField(db_column='Phone', max_length=12, unique=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=45, null=True, unique=True)),
                ('username', models.CharField(blank=True, db_column='Username', max_length=45, null=True, unique=True)),
                ('password', models.CharField(blank=True, db_column='Password', max_length=45, null=True)),
                ('point', models.PositiveIntegerField(blank=True, db_column='Point', null=True)),
                ('customertype', models.PositiveIntegerField(blank=True, db_column='CustomerType', null=True)),
            ],
            options={
                'db_table': 'customer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServicePacket',
            fields=[
                ('packagename', models.CharField(db_column='PackageName', max_length=50, primary_key=True, serialize=False)),
                ('daynum', models.PositiveIntegerField(db_column='DayNum')),
                ('guestnum', models.PositiveIntegerField(db_column='GuestNum')),
                ('price', models.IntegerField(db_column='Price')),
            ],
            options={
                'db_table': 'service_packet',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SupplyType',
            fields=[
                ('sppid', models.CharField(db_column='SppID', max_length=6, primary_key=True, serialize=False)),
                ('sppname', models.CharField(db_column='SppName', max_length=50, unique=True)),
            ],
            options={
                'db_table': 'supply_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RoomType',
            fields=[
                ('roomid', models.AutoField(db_column='RoomID', primary_key=True, serialize=False)),
                ('roomname', models.CharField(db_column='RoomName', max_length=45)),
                ('area', models.PositiveIntegerField(db_column='Area')),
                ('numguest', models.PositiveIntegerField(db_column='NumGuest')),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
            ],
            options={
                'db_table': 'room_type',
            },
        ),
        migrations.CreateModel(
            name='BedInfo',
            fields=[
                ('roomid', models.OneToOneField(db_column='RoomID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='base.roomtype')),
                ('size', models.DecimalField(db_column='Size', decimal_places=1, max_digits=2)),
                ('quantity', models.IntegerField(db_column='Quantity')),
            ],
            options={
                'db_table': 'bed_info',
                'unique_together': {('roomid', 'size')},
            },
        ),
        migrations.CreateModel(
            name='RoomTypeSupplyType',
            fields=[
                ('sppid', models.OneToOneField(db_column='SppID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='base.supplytype')),
                ('quantity', models.PositiveIntegerField(db_column='Quantity')),
                ('roomid', models.ForeignKey(db_column='RoomID', on_delete=django.db.models.deletion.DO_NOTHING, to='base.roomtype')),
            ],
            options={
                'db_table': 'room_type_supply_type',
                'unique_together': {('sppid', 'roomid')},
            },
        ),
    ]
